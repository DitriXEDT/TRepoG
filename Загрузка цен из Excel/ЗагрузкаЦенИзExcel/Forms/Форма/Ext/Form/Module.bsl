
&НаСервере
Процедура ВыполнитьКомандуНаСервере(ЭлементОбъект,АдресВременногоХранилищаФайла)
	
	ИмяТЧ = "Товары";
	СписокОшибок.Очистить();
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресВременногоХранилищаФайла);
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("xlsx");
	
	ДвоичныеДанные.Записать(ИмяВременногоФайла);
	
	//Таблица для загрузки товаров
	ТабЗагрузки=Новый ТаблицаЗначений;
	ТабЗагрузки.Колонки.Добавить("Номенклатура",Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТабЗагрузки.Колонки.Добавить("УТР_Серия",Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры"));
	ТабЗагрузки.Колонки.Добавить("Цена");
	ТабЗагрузки.Колонки.Добавить("Упаковка",Новый ОписаниеТипов("СправочникСсылка.УпаковкиЕдиницыИзмерения"));
	ТабЗагрузки.Колонки.Добавить("ВидЦены",Новый ОписаниеТипов("СправочникСсылка.ВидыЦен"));
	
	//Опишем структуру табличного документа, куда прочитаем xlsx файл на сервере. Такой вариант читается в разы быстрее обычного com, да и на сервере может быть не установлен Excel
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.Прочитать(ИмяВременногоФайла,СпособЧтенияЗначенийТабличногоДокумента.Значение);
	ТабличныйДокумент.Область(НачальнаяСтрока-1, КолонкаКодТовара, 		  	НачальнаяСтрока-1, КолонкаКодТовара).Текст 					= "КодТовара";
	ТабличныйДокумент.Область(НачальнаяСтрока-1, КолонкаНаименованиеТовара, НачальнаяСтрока-1, КолонкаНаименованиеТовара).Текст 		= "НаименованиеТовара";
	ТабличныйДокумент.Область(НачальнаяСтрока-1, КолонкаКодСерии, 		 	НачальнаяСтрока-1, КолонкаКодСерии).Текст 					= "КодСерии";
	ТабличныйДокумент.Область(НачальнаяСтрока-1, КолонкаЦена, 			  	НачальнаяСтрока-1, КолонкаЦена).Текст 						= "Цена";
	Построитель = Новый ПостроительЗапроса;
	Построитель.ИсточникДанных = Новый ОписаниеИсточникаДанных(ТабличныйДокумент.Область(НачальнаяСтрока-1, КолонкаКодТовара, ТабличныйДокумент.ВысотаТаблицы, ТабличныйДокумент.ШиринаТаблицы));	
	Построитель.Выполнить();
	Выборка = Построитель.Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если ЗначениеЗаполнено(Выборка.КодТовара) И ЗначениеЗаполнено(Выборка.КодСерии)   Тогда
			//Поиск товара
			КодТовара = СокрЛП(СтрЗаменить(Выборка.КодТовара,Символы.НПП,""));
			Если СтрДлина(КодТовара)<11 Тогда
				КодТовара = ПривестиКДлинеСтроки(КодТовара,11);
			КонецЕсли;
			Товар=Справочники.Номенклатура.НайтиПоКоду(КодТовара);
			
			НаименованиеТовара = СокрЛП(СтрЗаменить(Выборка.НаименованиеТовара,Символы.НПП,""));
			Если Не ЗначениеЗаполнено(Товар)и ЗначениеЗаполнено(НаименованиеТовара) Тогда
				Товар=Справочники.Номенклатура.НайтиПоНаименованию(НаименованиеТовара);
			КонецЕсли;
			//Поиск серии
			КодСерии = СокрЛП(СтрЗаменить(Выборка.КодСерии,Символы.НПП,""));
			Если СтрДлина(КодСерии)<11 Тогда
				КодСерии = ПривестиКДлинеСтроки(КодСерии,11);
			КонецЕсли;
			Серия=Справочники.СерииНоменклатуры.НайтиПоКоду(КодСерии);
			Если ЗначениеЗаполнено(Серия)  Тогда
				Если Серия.УТР_Номенклатура<>Товар Тогда
					Серия = Справочники.СерииНоменклатуры.ПустаяСсылка();
				КонецЕсли;
			КонецЕсли;
			ТекущаяЦена = 0;
			Попытка
				
				ТекущаяЦена = Число(Выборка.Цена);
				
			Исключение
				ТекстСообщения = "Не удалось получить цену по товару кодом %КодТовара% серии %КодСерии% по причине - " + ОписаниеОшибки();
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%КодТовара%"  ,Выборка.КодТовара);
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%КодСерии%"  ,Выборка.КодСерии);
				СписокОшибок.Добавить(ТекстСообщения);
				
			КонецПопытки;
			Если НЕ ЗначениеЗаполнено(Товар) Тогда
				
				ТекстСообщения = "Не найден товар с кодом %КодТовара%, в файле указано как %ЗначениеФайла%";
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%КодТовара%"  ,КодТовара);
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%ЗначениеФайла%"  ,Выборка.КодТовара);
				СписокОшибок.Добавить(ТекстСообщения);
			ИначеЕсли НЕ ЗначениеЗаполнено(Серия) Тогда
				ТекстСообщения = "Не найдена серия с кодом %КодСерии% по товару с кодом %КодТовара%";
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%КодСерии%"  ,КодСерии);
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%КодТовара%"  ,КодТовара);
				СписокОшибок.Добавить(ТекстСообщения);
			Иначе
				Если ЗначениеЗаполнено(ТекущаяЦена) Тогда
					Если Не ЗначениеЗаполнено(ВидЦены) Тогда
						Для Каждого СтрокаВидЦены Из ЭлементОбъект.ВидыЦен Цикл
							СтрТаб=ТабЗагрузки.Добавить();
							СтрТаб.Номенклатура = Товар;
							СтрТаб.УТР_Серия = Серия;
							СтрТаб.Упаковка = Товар.ЕдиницаИзмерения;
							СтрТаб.ВидЦены = СтрокаВидЦены.ВидЦены;
							СтрТаб.Цена = Окр(ТекущаяЦена,2);
						КонецЦикла;
					Иначе
						СтрТаб=ТабЗагрузки.Добавить();
						СтрТаб.Номенклатура=Товар;
						СтрТаб.УТР_Серия = Серия;
						СтрТаб.Упаковка = Товар.ЕдиницаИзмерения;
						СтрТаб.ВидЦены=ВидЦены;
						СтрТаб.Цена= Окр(ТекущаяЦена,2);
					КонецЕсли;
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;		
	КонецЦикла;
	Если ТабЗагрузки.Количество()=0 Тогда
		ТекстСообщения = "Нет данных для загрузки";
		СписокОшибок.Добавить(ТекстСообщения);
		Возврат;
	КонецЕсли;	
	
	ЭлементОбъект.Товары.Очистить();
	ЭлементОбъект.Товары.Загрузить(ТабЗагрузки);
	Если Не ЗначениеЗаполнено(ВидЦены) Тогда
		ТабЗагрузки.Свернуть("ВидЦены");
		ЭлементОбъект.ВидыЦен.Загрузить(ТабЗагрузки);
	КонецЕсли;
	
	//ЭлементОбъект.Записать();
	ТекстСообщения = "Загружено в документ № %НомерДокумента% из файла Excel %Количество%  строк";
	ТекстСообщения = СтрЗаменить(ТекстСообщения,"%НомерДокумента%"  ,Строка(ЭлементОбъект.Номер));
	ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Количество%"  ,Строка(ТабЗагрузки.Количество()));
	СписокОшибок.Добавить(ТекстСообщения);
	
	УдалитьФайлы(ИмяВременногоФайла);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьКоманду(ИдентификаторКоманды, ОбъектыНазначенияМассив) Экспорт
	Если ИдентификаторКоманды="Заполнить" Тогда
		Режим = РежимДиалогаВопрос.ДаНет;
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса", ЭтаФорма, Параметры);
		ПоказатьВопрос(Оповещение, НСтр("ru = 'Товарная часть документа будет перезаполнена.Продолжить?'"), Режим, 0);
	КонецЕсли;
	
 КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопроса(Результат, Параметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		ФайлЗагр = Новый Файл(ФайлЗагрузки);
	
		ФайлЗагр.НачатьПроверкуСуществования(Новый ОписаниеОповещения("ОповещениеОСуществованииФайла", ЭтотОбъект));
	
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОповещениеОСуществованииФайла(Существует, Параметры) экспорт
	Если Существует Тогда
		
		ПомещенныеФайлы = Новый Массив();                     
		
		ПомещенныеФайлы.Добавить(Новый  ОписаниеПередаваемогоФайла(ФайлЗагрузки,""));
		
		Событие = Новый ОписаниеОповещения ("ФайлыПомещены", ЭтотОбъект, Неопределено);
		
		НачатьПомещениеФайлов(Событие, ПомещенныеФайлы, , Ложь, УникальныйИдентификатор);
		
	КонецЕсли;		
		
КонецПроцедуры

&НаКлиенте
Процедура ФайлыПомещены(ПомещенныеФайлы, Параметры) Экспорт
	
	Если ПомещенныеФайлы = Неопределено ИЛИ (ПомещенныеФайлы.Количество()=0) Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Ошибка помещения файлов " + ОписаниеОшибки() + "'"));
			
	Иначе 
		Состояние(НСтр("ru = 'Идет чтение файла...'"));	
		
		Если НЕ ВладелецФормы=Неопределено Тогда
			НовыйОбъект = ВладелецФормы.Объект;		                               	
		Иначе
			ВладелецФормы = ОткрытьФорму("Документ.УстановкаЦенНоменклатуры.Форма.ФормаДокумента", Новый Структура("Ключ", Объект.Ссылка));
			НовыйОбъект = ВладелецФормы.Объект;
 		КонецЕсли;
				
		ВыполнитьКомандуНаСервере(НовыйОбъект,ПомещенныеФайлы[0].Хранение);			
		Если СписокОшибок.Количество()>0 Тогда
		     Для каждого ТекущаяОшибка Из СписокОшибок Цикл
			 
			 	//Состояние(НСтр("ru='"+ТекущаяОшибка+"'"));
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='"+ТекущаяОшибка+"'"),Объект.Ссылка,,"Объект.Ссылка",);

			 
			 КонецЦикла; 
			
		
		КонецЕсли;
		
		КопироватьДанныеФормы(НовыйОбъект,ВладелецФормы.Объект);
		ВладелецФормы.Записать();
		ВладелецФормы.Прочитать();
		
		//Закрыть();
		
	КонецЕсли;

	
КонецПроцедуры

&НаКлиенте
Процедура Загрузить(Команда)
	ВыполнитьКоманду("Заполнить", Объект);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	НачальнаяСтрока=2;
	КолонкаКодТовара=1;
	КолонкаНаименованиеТовара=3;
	КолонкаКодСерии=2;
	КолонкаЦена=12;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлЗагрузкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Заголовок = НСтр("ru = 'Выберите файл Excel для загрузки'");
	Диалог.Фильтр = "*.xlsx" + "|*.xlsx";
	Если Диалог.Выбрать() Тогда
		ФайлЗагрузки=Диалог.ПолноеИмяФайла;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ПривестиКДлинеСтроки(Строка, ДлиннаСтроки) 
	
	ТекстПолный = Строка;
	Пока СтрДлина(ТекстПолный) < ДлиннаСтроки Цикл
		ТекстПолный = "0" + ТекстПолный;
	КонецЦикла;
	          
	Возврат ТекстПолный;
	
КонецФункции
